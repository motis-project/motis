name: Windows Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - mode: Debug
            webui: Off
          - mode: Release
            webui: On

    env:
      CXX: cl.exe
      CC: cl.exe
      BUILDCACHE_COMPRESS: true
      BUILDCACHE_DIRECT_MODE: true
      BUILDCACHE_ACCURACY: SLOPPY # not suitable for coverage/debugging
      BUILDCACHE_DIR: ${{ github.workspace }}/.buildcache
      BUILDCACHE_LUA_PATH: ${{ github.workspace }}/tools

    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: buildcache Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.buildcache
          key: buildcache-wnds-${{ matrix.config.mode }}-${{ hashFiles('.pkg') }}-${{ hashFiles('**/*.h') }}-${{ hashFiles('**/*.cc') }}
          restore-keys: |
            buildcache-wnds-${{ matrix.config.mode }}-${{ hashFiles('.pkg') }}-${{ hashFiles('**/*.h') }}
            buildcache-wnds-${{ matrix.config.mode }}-${{ hashFiles('.pkg') }}-
            buildcache-wnds-${{ matrix.config.mode }}-

      - name: Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/deps
          key: deps-${{ hashFiles('.pkg') }}
          restore-keys: deps-

      - name: Build
        run: |
          $devShell = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -find **\Microsoft.VisualStudio.DevShell.dll
          $installPath = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationpath
          Import-Module $devShell
          Enter-VsDevShell -VsInstallPath $installPath -SkipAutomaticLocation -DevCmdArguments "-arch=amd64"
          cmake `
            -GNinja -S . -B build `
            -DCMAKE_BUILD_TYPE=${{ matrix.config.mode }} `
            -DMOTIS_DEBUG_SYMBOLS=OFF `
            -DMOTIS_WITH_WEBUI=${{ matrix.config.webui }}
          .\build\buildcache\bin\buildcache.exe -z
          cmake --build build --target `
            motis `
            motis-test `
            motis-itest
          $CompilerExitCode = $LastExitCode
          .\build\buildcache\bin\buildcache.exe -s
          exit $CompilerExitCode

      # ==== TESTS ====
      - name: Run Test Mode
        run: >
          .\build\motis
          --mode test
          --import.paths schedule:base/loader/test_resources/hrd_schedules/single-ice
          --dataset.begin 20151004
          --dataset.write_serialized false
          --exclude_modules address osrm parking path ppr tiles

      - name: Run Tests
        run: .\build\motis-test.exe

      - name: Run Integration Tests
        run: .\build\motis-itest.exe

      # ==== WEB INTERFACE ====
      - name: Compile Web Interface
        if: matrix.config.webui == 'On'
        run: |
          cmake --build build --target motis-web-ui
          rm -r ui/web/elm-stuff
          rm -r ui/web/src

      - name: pnpm Cache
        if: matrix.config.webui == 'On'
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install RSL Web Interface Dependencies
        uses: pnpm/action-setup@v2.2.0
        if: matrix.config.webui == 'On'
        with:
          version: ^6.32.2
          run_install: |
            - cwd: ./ui/rsl

      - name: Compile RSL Web Interface
        if: matrix.config.webui == 'On'
        run: pnpm run build
        working-directory: ./ui/rsl

      # ==== DISTRIBUTION ====
      - name: Move Profiles
        if: matrix.config.mode == 'Release'
        run: |
          Copy-Item .\deps\osrm-backend\profiles .\osrm-profiles -Recurse
          Copy-Item .\deps\ppr\profiles .\ppr-profiles -Recurse
          Copy-Item .\deps\tiles\profile .\tiles-profiles -Recurse

      - name: Move Web UI
        if: matrix.config.mode == 'Release'
        run: |
          mkdir web
          Copy-Item .\ui\web\external_lib,.\ui\web\img,.\ui\web\js,.\ui\web\style .\web\ -Recurse
          Copy-Item .\ui\web\*.html,.\ui\web\*.js,.\ui\web\*.ico .\web\
          Copy-Item .\ui\rsl\dist .\web\rsl -Recurse

      - name: Create Distribution
        if: matrix.config.mode == 'Release'
        run: >
          7z a motis-windows.zip
          .\build\motis.exe
          .\osrm-profiles
          .\ppr-profiles
          .\tiles-profiles
          .\web

      - name: Upload Distribution
        if: matrix.config.mode == 'Release'
        uses: actions/upload-artifact@v1
        with:
          name: motis-windows
          path: motis-windows.zip

      # ==== RELEASE ====
      - name: Upload Release
        if: github.event.action == 'published' && matrix.config.mode == 'Release'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./motis-windows.zip
          asset_name: motis-windows.zip
          asset_content_type: application/zip
